# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files in version control:
#  - .idea/modules.xml
#  - .idea/*.iml
#  - .idea/misc.xml
#  - .idea/vcs.xml
#  - .idea/workspace.xml
#  - .idea/tasks.xml
#  - .idea/usage.statistics.xml
#  - .idea/shelf
#  - .idea/dictionaries
#  - .idea/runConfigurations
#  - .idea/inspectionProfiles
#  - .idea/codeStyles
#  - .idea/fileTemplates
#  - .idea/tools
#  - .idea/artifacts
#  - .idea/libraries
#  - .idea/runConfigurations
#  - .idea/shelf
#  - .idea/dictionaries
#  - .idea/usage.statistics.xml
#  - .idea/tasks.xml
#  - .idea/workspace.xml
#  - .idea/vcs.xml
#  - .idea/misc.xml
#  - .idea/*.iml
#  - .idea/modules.xml
.idea/

# VS Code
.vscode/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node_modules
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Medical Diagnosis AI System specific
# Database files
*.db
*.sqlite
*.sqlite3

# Medical data (if any)
data/patients/
data/sessions/

# API keys and secrets (except whitelisted ones)
secrets/
keys/
*.key
*.pem

# Temporary files
temp/
tmp/
*.tmp

# Backup files
*.bak
*.backup

# WHITELISTED FILES - These will be tracked in git
!env.example
!.env.example
!venv.example
!.venv.example
!requirements.txt
!environment.yml
!environment.yaml
!pyproject.toml
!Pipfile
!poetry.lock
!pdm.lock

# Allow specific environment files for documentation
!env.example
!.env.example

# Allow virtual environment documentation
!venv.example
!.venv.example

# Allow dependency files
!requirements.txt
!requirements-dev.txt
!requirements-test.txt
!setup.py
!setup.cfg
!pyproject.toml
!Pipfile
!Pipfile.lock
!poetry.lock
!pdm.lock

# Allow configuration examples
!config.example
!config.example.yml
!config.example.yaml
!config.example.json
!settings.example
!settings.example.yml
!settings.example.yaml
!settings.example.json

# Allow documentation files
!README.md
!README.txt
!README.rst
!LICENSE
!LICENSE.txt
!CHANGELOG.md
!CHANGELOG.txt
!CONTRIBUTING.md
!CONTRIBUTING.txt
!ARCHITECTURE.md
!EXPLANATION.md
!DEMO.md
!INSTALL.md
!SETUP.md
!USAGE.md
!API.md
!DEPLOYMENT.md
!TROUBLESHOOTING.md

# Allow test files
!test_*.py
!*_test.py
!tests/
!test/
!spec/
!specs/

# Allow source code
!src/
!app/
!main.py
!start.py
!streamlit_app.py
!*.py

# Allow configuration files
!*.yml
!*.yaml
!*.json
!*.toml
!*.ini
!*.cfg
!*.conf

# Allow documentation
!*.md
!*.txt
!*.rst
!docs/
!documentation/

# Allow assets
!images/
!assets/
!static/
!public/
!*.png
!*.jpg
!*.jpeg
!*.gif
!*.svg
!*.ico
!*.css
!*.js
!*.html
!*.xml

# Allow scripts
!scripts/
!tools/
!bin/
!*.sh
!*.bat
!*.ps1

# Allow Docker files
!Dockerfile
!docker-compose.yml
!docker-compose.yaml
!.dockerignore

# Allow CI/CD files
!.github/
!.gitlab-ci.yml
!azure-pipelines.yml
!appveyor.yml
!.travis.yml
!circle.yml
!codeship-services.yml
!codeship-steps.yml

# Allow IDE configuration (optional)
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.idea/codeStyles/
!.idea/inspectionProfiles/
!.idea/runConfigurations/ 